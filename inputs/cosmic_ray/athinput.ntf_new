<comment>
problem   = Simulation with Turbulence, Cosmic Rays, CII+Ly Cooling function
reference = 
configure =  python3 configure.py --prob=ntf_new --nghost=4 --eos="adiabatic" -b -fft -cr -hdf5 -mpi -omp --mpiccmd=h5pcc --cflag='-DH5_HAVE_PARALLEL -lstdc++' --cxx='g++'

# Assuming units of v = 10^5 cm/s = km/s, l = 1 pc, n = 1/cm^3, m = 1 m_p
# With derived units t = 9.77792222e-01 Myr, T = 1.21147513e+02 K, 

<job>
problem_id = ntf      # problem ID: basename of output filenames

<output1>
file_type   = hst         # History data dump
dt          = 0.01        # time increment between outputs

<output2>
file_type   = hdf5        # Binary data dump
variable    = prim        # variables to be output
dt          = 0.05         # time increment between outputs

# <output3>
# file_type   = rst         #Restart file
# dt          = 1.0     

<time>                    # Time has units of 9.77792222e-01 Myr
cfl_number   = 0.1        # The Courant, Friedrichs, & Lewy (CFL) Number
nlim         = -1         # cycle limit
tlim         = 50        # time limit
integrator   = rk4        # time integration algorithm
xorder       = 3          # order of spatial reconstruction
ncycle_out   = 100        # interval for stdout summary info

<mesh>
nx1         = 600         # Number of zones in X1-direction
x1min       = -20.0       # minimum value of X1
x1max       = 20.0       # maximum value of X1 (unit: pc)
ix1_bc      = outflow    # inner-X1 boundary flag
ox1_bc      = outflow    # outer-X1 boundary flag

nx2         = 1        # Number of zones in X2-direction
x2min       = -0.1       # minimum value of X2
x2max       =  0.1       # maximum value of X2 (unit: pc)
ix2_bc      = reflecting    # inner-X2 boundary flag
ox2_bc      = reflecting    # outer-X2 boundary flag

nx3         = 1        # Number of zones in X3-direction
x3min       = -0.1       # minimum value of X3
x3max       = 0.1        # maximum value of X3 (unit: pc)
ix3_bc      = reflecting    # inner-X3 boundary flag
ox3_bc      = reflecting    # outer-X3 boundary flag

# num_threads = 2

<meshblock>
nx1        = 50
nx2        = 1
nx3        = 1

<hydro>
gamma           = 1.66666666666667    # gamma = C_p/C_v

<cr>
vmax         = 306.6     # Modified Speed of light in units of 1km/s. 306.6013937855506 is c
kappaPerp    = 3e18    # Perpendicular Diffusion Constant (in CGS)
kappaParl    = 1e26    # Parallel Diffusion Constant (in CGS)
src_flag     = 1                # CR Source terms in MHD equations (1=Yes, 0=No)
vs_flag      = 1                # Streaming instability (1=Yes, 0=No)

<problem>
n0         = 100.0      # The density of each pixel (Unit: mH cm^-3)
inv_beta    = 5 #moresig      # inverse of Plasma beta (B^2/(2P))
inv_betaCR  = 0.005 #moresig      # inverse of CR beta (P_cr/P)
T0         = 1e4      # Background temperature

r0         = 0.1      # radius in x2 x3 plane of injection tube 
ti         = 0.0      # injection start time 
tf         = 2.0     #injection end time

L0 = 6e-6 #moresig    # injected CR beta wrt background P 
vcr_inj       = 0.045    # 'velocity' of injected CRs, for Flux calc
synch_flag = 1 #0 is no synch, 1 is constant synch, 2 is derived time-dependent synch
lepton_flag = 1 #1 is lepton-only, 2 is proton
